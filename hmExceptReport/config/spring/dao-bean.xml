<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING/DTD BEAN/EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"
		lazy-init="true">
	</bean>

	<!-- 配置数据源--> 
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc_driver}" />
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />
		<property name="maxActive" value="${jdbc_maxActive}" />
		<property name="minIdle" value="${jdbc_minIdle}" />
		<property name="maxIdle" value="${jdbc_maxIdle}" />
		<property name="maxWait" value="${jdbc_maxWait}" />
		<property name="initialSize" value="${jdbc_initialSize}" />
		<property name="removeAbandonedTimeout" value="${jdbc_removeAbandonedTimeout}" />
	</bean>

	<!-- 数据库session工厂 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--  hibernate配置文件 -->
		<property name="mappingLocations">
			<list>
				<value>classpath:com/hm/excp/dao/pojo/User.hbm.xml</value>
			</list>
		</property>
		<!-- hibernate属性文件 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop> 
			</props>
		<!-- 
			<value>
				hibernate.dialect=${hibernate.dialect}
				hibernate.show_sql=${hibernate.show_sql}
				hibernate.hbm2ddl.auto=create
				hibernate.format_sql=true
				hibernate.jdbc.use_scrollable_resultset=true
				hibernate.connection.autocommit=false
		 -->
				<!-- 二级缓存设置 -->
				<!-- 
				hibernate.cache.provider_class=${hibernate.cache.provider_class}
		     </value>
				 -->
		</property>
	</bean>
	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!--  事务拦截器-->
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<!--  事务拦截器bean需要依赖注入一个事务管理器 -->
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<!--  下面定义事务传播属性-->
			<props>
				<!--
					<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop> <prop
					key="*">PROPAGATION_REQUIRED</prop>
				-->
				<prop key="*">PROPAGATION_REQUIRED,-Exception</prop>

				<prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>

				<prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop>

				<prop key="del*">PROPAGATION_REQUIRED,-Exception</prop>

				<prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>

				<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>

				<prop key="remove*">PROPAGATION_REQUIRED,-Exception</prop>

				<prop key="request*">PROPAGATION_REQUIRED,readOnly</prop>
				
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="search*">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="query*">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="list*">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="count*">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>


	<!-- 定义BeanNameAutoProxyCreator-->
	<bean
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<!--  指定对满足哪些bean name的bean自动生成业务代理 -->
		<property name="beanNames">
			<!--  下面是所有需要自动创建事务代理的bean-->
			<!--
				<list> <value>userService</value> <value>monitorService</value>
				</list>
			-->
			<!--  此处可增加其他需要自动创建事务代理的bean-->
			<value>*Service</value>
		</property>
		<!--  下面定义BeanNameAutoProxyCreator所需的事务拦截器-->
		<property name="interceptorNames">
			<list>
				<!-- 此处可增加其他新的Interceptor -->
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>

	<bean
		class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
		<property name="transactionInterceptor" ref="transactionInterceptor" />
	</bean>

</beans>